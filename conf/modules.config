/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/06-pipeline_info" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: FASTQC {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/01-fastqc" },
            mode: params.publish_dir_mode
        ]
    }

    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/06-pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

    withName: ADAPTERREMOVAL {
        ext.args = [
            "--trimns",
            "--trimqualities",
            "--minquality ${params.zotu_min_quality}"
        ]
        .join(' ').trim()
        ext.args2 = [
            "--collapse",
            "--trimns",
            "--trimqualities",
            "--minquality ${params.zotu_min_quality}",
            "--minalignmentlength ${params.zotu_min_align_leng}"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/02-vsearch/filtered" },
            mode: params.publish_dir_mode
        ]
    }

    withName: BLAST_BLASTN {
        ext.args = [
            "-outfmt '6 qseqid sseqid staxids sscinames scomnames sskingdoms pident length qlen slen mismatch gapopen gaps qstart qend sstart send stitle evalue bitscore qcovs qcovhsp'",
            "-task ${params.blast_task}",
            "-perc_identity ${params.blast_pid}",
            "-evalue ${params.blast_evalue}",
            params.blast_best_hit_score_edge ? "-best_hit_score_edge ${params.blast_best_hit_score_edge}" : "",
            params.blast_best_hit_overhang ? "-best_hit_overhang ${params.blast_best_hit_overhang}" : "",
            params.blast_qcov ? "-qcov_hsp_perc ${params.blast_qcov}" : "",
            params.blast_max_tar_seq ? "-max_target_seqs ${params.blast_max_tar_seq}" : "",
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/04-blast" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }

    withName: BLAST_MAKEBLASTDB {
        ext.args = [
            "-parse_seqids",
            "-dbtype nucl"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/03-lulu" },
            mode: params.publish_dir_mode
        ]
    }

    withName: BLAST_MATCHLIST {
        ext.args = [
            "-outfmt '6 qseqid sseqid pident'",
            "-qcov_hsp_perc 80",
            "-perc_identity 84"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/03-lulu" },
            mode: params.publish_dir_mode
        ]
    }

    withName: CUTADAPT {
        ext.args1 = [
            "-e ${params.cutadapt_error}",
            "--no-indels",
            "--report=full",
            "--minimum-length ${params.cutadapt_min_len}",
            "-g ^file:fw.fa",
            "-o {name}.R1.fq.gz"
        ]
        .join(' ').trim()
        ext.args2 = [
            "-e ${params.cutadapt_error}",
            "--no-indels",
            "--report=full",
            "--minimum-length ${params.cutadapt_min_len}",
            "-g ^file:fw.fa",
            "-G ^file:rv.fa",
            "-o {name1}-{name2}.R1.fq.gz",
            "-p {name1}-{name2}.R2.fq.gz"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/01-cutadapt" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }

    withName: CUTADAPT_TRIM {
        ext.args1 = [
            "-e ${params.primertrim_error}",
            "--report=full",
            "-g ^${params.fw_primer}",
            "-o trimmed_\$(basename \${files[0]})",
            "--discard-untrimmed",
            "--rename=\"{header}\""
        ]
        .join(' ').trim()
        ext.args2 = [
            "-e ${params.primertrim_error}",
            "--report=full",
            "-g ^${params.fw_primer} -G ^${params.rv_primer}",
            "-o trimmed_\$(basename \${files[0]}) -p trimmed_\$(basename \${files[1]})",
            "--discard-untrimmed",
            "--revcomp",
            "--rename=\"{header}\""
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/01-cutadapt_trim" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }

    withName: SEQTK_TRIM {
        ext.args = [
            "-L ${params.seqtk_length}",
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/01-seqtk" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DADA2_DEREPLICATE {
        publishDir = [
            path: { "${params.outdir}/02-dada2" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DADA2_FILTERANDTRIM {
        publishDir = [
            path: { "${params.outdir}/02-dada2/filtered" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }

    withName: DADA2_FINALOUTPUTS {
        publishDir = [
            path: { "${params.outdir}/02-dada2" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DADA2_LEARNERRORS {
        publishDir = [
            path: { "${params.outdir}/02-dada2" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DADA2_MERGE {
        ext.args = [
            "minOverlap = ${params.asv_min_overlap}",
            "maxMismatch = ${params.asv_max_mismatch}"
        ].join(',').replaceAll('(,)*$', "")
        publishDir = [
            path: { "${params.outdir}/02-dada2" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DADA2_PLOTERRORS {
        publishDir = [
            path: { "${params.outdir}/02-dada2/plots" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DADA2_PLOTQUALITYPROFILERAW {
        publishDir = [
            path: { "${params.outdir}/02-dada2/plots" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DADA2_PLOTQUALITYPROFILETRIMMED {
        publishDir = [
            path: { "${params.outdir}/02-dada2/plots" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DADA2_REMOVEBIMERADENOVO {
        publishDir = [
            path: { "${params.outdir}/02-dada2" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DADA2_SAMPLEINFERENCE {
        ext.args = [
            params.asv_pooled == "pseudo" ? "pool = \"pseudo\"" :
                params.asv_pooled == true ? "pool = TRUE" : "pool = FALSE"
        ].join(',').replaceAll('(,)*$', "")
        publishDir = [
            path: { "${params.outdir}/02-dada2" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DADA2_SEQUENCEDISTRIBUTION {
        publishDir = [
            path: { "${params.outdir}/02-dada2/plots" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DADA2_SEQUENCETABLE {
        publishDir = [
            path: { "${params.outdir}/02-dada2" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DADA2_TRACKREADS {
        publishDir = [
            path: { "${params.outdir}/02-dada2/plots" },
            mode: params.publish_dir_mode
        ]
    }

    withName: FASTQCONCAT {
        publishDir = [
            path: { "${params.outdir}/02-vsearch" },
            mode: params.publish_dir_mode
        ]
    }

    withName: FASTQRELABEL {
        publishDir = [
            path: { "${params.outdir}/02-vsearch/relabeled" },
            mode: params.publish_dir_mode
        ]
    }

    withName: FASTQTOFASTA {
        publishDir = [
            path: { "${params.outdir}/02-vsearch" },
            mode: params.publish_dir_mode
        ]
    }

    withName: LCA {
        ext.args = [
            "${params.lca_qcov}",
            "${params.lca_pid}",
            "${params.lca_diff}"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/05-lca" },
            mode: params.publish_dir_mode
        ]
    }

    withName: LULU {
        ext.args = [
            "minimum_match = ${params.lulu_min_match}"
        ].join(',').replaceAll('(,)*$', "")
        publishDir = [
            path: { "${params.outdir}/03-lulu" },
            mode: params.publish_dir_mode
        ]
    }

    withName: OBITOOLS3_ALIGNPAIREDEND {
        publishDir = [
            path: { "${params.outdir}/01-obitools3" },
            mode: params.publish_dir_mode
        ]
    }

    withName: OBITOOLS3_GREP {
        ext.args = [
            "-l ${params.obi3_min_len}"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/01-obitools3" },
            mode: params.publish_dir_mode
        ]
    }

    withName: OBITOOLS3_NGSFILTER {
        publishDir = [
            path: { "${params.outdir}/01-obitools3" },
            mode: params.publish_dir_mode
        ]
    }

    withName: CREATE_NGSFILE {
        publishDir = [
            path: { "${params.outdir}/01-obitools3" },
            mode: params.publish_dir_mode
        ]
    }

    withName: CREATE_DEMUX_DEPENDENCIES {
        publishDir = [
            path: { "${params.outdir}/01-cutadapt" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }

    withName: SPLIT_FASTQ {
        publishDir = [
            path: { "${params.outdir}/01-obitools3/split_samples" },
            mode: params.publish_dir_mode
        ]
    }

    withName: PHYLOSEQ {
        publishDir = [
            path: { "${params.outdir}/06-phyloseq" },
            mode: params.publish_dir_mode
        ]
    }

    withName: RAW_STATS {
        publishDir = [
            path: { "${params.outdir}/01-seqkit_stats" },
            mode: params.publish_dir_mode
        ]
    }

    withName: ASSIGNED_STATS {
        publishDir = [
            path: { "${params.outdir}/01-seqkit_stats" },
            mode: params.publish_dir_mode
        ]
    }

    withName: UNKNOWN_STATS {
        publishDir = [
            path: { "${params.outdir}/01-seqkit_stats" },
            mode: params.publish_dir_mode
        ]
    }

    withName: FINAL_STATS {
        publishDir = [
            path: { "${params.outdir}/01-seqkit_stats" },
            mode: params.publish_dir_mode
        ]
    }

    withName: CONCAT {
        publishDir = [
            path: { "${params.outdir}/01-cutadapt/assigned" },
            mode: params.publish_dir_mode
        ]
    }

    withName: CONCAT_BLASTN_RESULTS {
        publishDir = [
            path: { "${params.outdir}/04-blast" },
            mode: params.publish_dir_mode
        ]
    }

    withName: GETLULUFASTA {
        publishDir = [
            path: { "${params.outdir}/03-lulu" },
            mode: params.publish_dir_mode
        ]
    }

    withName: REMOVE_DUPS {
        publishDir = [
            path: { "${params.outdir}/05-lca" },
            mode: params.publish_dir_mode
        ]
    }

    withName: RENAME {
        publishDir = [
            path: { "${params.outdir}/01-cutadapt/unknown" },
            mode: params.publish_dir_mode,
            pattern: '*Unknown/*.fq.gz'
        ]
    }

    withName: USEARCH32_FASTXUNIQUES {
        ext.args = "-sizeout"
        publishDir = [
            path: { "${params.outdir}/02-usearch" },
            mode: params.publish_dir_mode
        ]
    }

    withName: USEARCH64_FASTXUNIQUES {
        ext.args = "-sizeout"
        publishDir = [
            path: { "${params.outdir}/02-usearch" },
            mode: params.publish_dir_mode
        ]
    }

    withName: USEARCH32_OTUTAB {
        ext.args = "-id ${params.zotu_id}"
        publishDir = [
            path: { "${params.outdir}/02-usearch" },
            mode: params.publish_dir_mode
        ]
    }

    withName: USEARCH64_OTUTAB {
        ext.args = "-id ${params.zotu_id}"
        publishDir = [
            path: { "${params.outdir}/02-usearch" },
            mode: params.publish_dir_mode
        ]
    }

    withName: USEARCH32_UNOISE3 {
        ext.args = [
            "-minsize ${params.zotu_min_size}"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/02-usearch" },
            mode: params.publish_dir_mode
        ]
    }

    withName: USEARCH64_UNOISE3 {
        ext.args = [
            "-minsize ${params.zotu_min_size}"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/02-usearch" },
            mode: params.publish_dir_mode
        ]
    }

    withName: VSEARCH_CLUSTERUNOISE {
        ext.args = [
            "--minsize ${params.zotu_min_size}",
            "--centroids"
        ]
        .join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/02-vsearch" },
            mode: params.publish_dir_mode
        ]
    }

    withName: VSEARCH_DEREPFULLLENGTH {
        ext.args = "--sizeout"
        publishDir = [
            path: { "${params.outdir}/02-vsearch" },
            mode: params.publish_dir_mode
        ]
    }

    withName: VSEARCH_UCHIME3DENOVO {
        ext.args = "--nonchimeras"
        publishDir = [
            path: { "${params.outdir}/02-vsearch" },
            mode: params.publish_dir_mode
        ]
    }

    withName: VSEARCH_USEARCHGLOBAL {
        ext.args = "--id ${params.zotu_id}"
        publishDir = [
            path: { "${params.outdir}/02-vsearch" },
            mode: params.publish_dir_mode
        ]
    }

    withName: DOWNLOAD_AQUAMAPS {
        publishDir = [
            path: { "${params.outdir}/06-aquamap" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }

    withName: POSTDEMUX_SAMPSHEET {
        publishDir = [
            path: { "${params.outdir}/01-postdemux" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }

    withName: MARKDOWN_REPORT {
        publishDir = [
            path: { "${params.outdir}/06-markdown" },
            mode: params.publish_dir_mode,
            enabled: false
        ]
    }

    withName: GET_AQUAMAP_PROBS {
        publishDir = [
            path: { "${params.outdir}/06-aquamap" },
            mode: params.publish_dir_mode
        ]
    }

    withName: MULTIQC {
        publishDir = [
            path: { "${params.outdir}/06-multiqc" },
            mode: params.publish_dir_mode
        ]
    }

    withName: OCOMNBC {
        publishDir = [
            path: { "${params.outdir}/04-ocomnbc" },
            mode: params.publish_dir_mode
        ]
    }
}
